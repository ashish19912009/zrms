syntax = "proto3";

package auth;
import "google/protobuf/timestamp.proto";

option go_package = "./pb;pb";
//  export PATH=$(go env GOPATH)/bin:$PATH
//  protoc --go_out=../ --go-grpc_out=../ auth.proto
service AuthService {
    // Login RPC - used by clients (admins, partners, etc)
    rpc Login           (LoginRequest)          returns(LoginResponse);
    
    // VerifyToken RPC - used internally by other services to verify JWTs
    rpc VerifyToken   (VerifyTokenRequest)  returns(AuthClaims);

    // RefreshToken RPC - used to refresh token issued by the server to client
    rpc RefreshToken    (RefreshTokenRequest)   returns(LoginResponse);

    // Logout RPC - used to logout user
    rpc Logout          (LogoutRequest)         returns(LogoutResponse);
}

// Login request with basic credentials
message LoginRequest {
    string login_id     = 1; // Can be default login_id or user-updated login_id
    string account_type = 2; // Defines role (e.g., delivery_partner, food_packer)
    string password     = 3;
}

message Permission {
    string resource = 1;    // e.g., "delivery"
    repeated string actions = 2; // e.g., ["accept_order", "mark_delivered"]
}

// Login response with access token
message LoginResponse {
    string employee_id   = 1;
    string account_id    = 2;
    string franchise_id  = 3;
    string account_type  = 4;
    string name          = 5;
    string mobile_no     = 6;
    string email         = 7;
    string access_token  = 8;
    string refresh_token = 9;
}

// Request to refresh token (used by interceptors)
message RefreshTokenRequest {
    string account_id = 1;
    string refresh_token    = 2;
}

// Request to validate token (used by interceptors)
message VerifyTokenRequest {
    string access_token = 1;
}

// Response contains token info if valid
message AuthClaims {
    string employee_id                  = 1;
    string franchise_id                 = 2;
    string account_type                 = 3;
    string name                         = 4;
    string mobile_no                    = 5;
    RegisteredClaims registered_claims  = 6;
  }

  message RegisteredClaims {
    string id                               = 1; // jti (UUID)
    string subject                          = 2; // accountID
    string issuer                           = 3;
    repeated string audience                = 4;
    google.protobuf.Timestamp issued_at     = 5;
    google.protobuf.Timestamp expires_at    = 6;
  }

// Request to logout (used by interceptors)
message LogoutRequest {
    string refresh_token = 1;
}

// Response logout (used by interceptors)
message LogoutResponse {
    bool success = 1;
}

