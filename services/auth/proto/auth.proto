syntax = "proto3";

package auth;

option go_package = "./pb;pb";
//  export PATH=$(go env GOPATH)/bin:$PATH
//  protoc --go_out=./ --go-grpc_out=./ proto/auth.proto
service AuthService {
    // Login RPC - used by clients (admins, partners, etc)
    rpc Login           (LoginRequest)          returns(LoginResponse);
    
    // VerifyToken RPC - used internally by other services to verify JWTs
    rpc VerifyToken   (VerifyTokenRequest)  returns(VerifyTokenResponse);

    // RefreshToken RPC - used to refresh token issued by the server to client
    rpc RefreshToken    (RefreshTokenRequest)   returns(LoginResponse);

    // Logout RPC - used to logout user
    rpc Logout          (LogoutRequest)         returns(LogoutResponse);
}

// Login request with basic credentials
message LoginRequest {
    string login_id     = 1; // Can be default login_id or user-updated login_id
    string account_type = 2; // Defines role (e.g., delivery_partner, food_packer)
    string password     = 3;
}

// Login response with access token
message LoginResponse {
    string employee_id   = 1;
    string account_id    = 2;
    string account_type  = 3;
    string name          = 4;
    string mobile_no     = 5;
    string access_token  = 6;
    string refresh_token = 7;
    repeated string permissions = 8; // List of permissions the user can have e.g. "delivery:accept_order", "delivery:mark_delivered", "packing:view_orders", "admin:manage_users"
}

// Request to refresh token (used by interceptors)
message RefreshTokenRequest {
    string account_id = 1;
    string refresh_token    = 2;
}

// Request to validate token (used by interceptors)
message VerifyTokenRequest {
    string access_token = 1;
}

// Response contains token info if valid
message VerifyTokenResponse {
    string account_id           = 1;
    string account_type         = 2;
    string role                 = 3;
    repeated string permissions = 4;
    bool is_valid               = 5;
}

// Request to logout (used by interceptors)
message LogoutRequest {
    string refresh_token = 1;
}

// Response logout (used by interceptors)
message LogoutResponse {
    bool success = 1;
}

