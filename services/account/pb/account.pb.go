// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: proto/account.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Common response after adding data
type AddResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddResponse) Reset() {
	*x = AddResponse{}
	mi := &file_proto_account_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResponse) ProtoMessage() {}

func (x *AddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResponse.ProtoReflect.Descriptor instead.
func (*AddResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{0}
}

func (x *AddResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// Common response after updating data
type UpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	mi := &file_proto_account_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type DeletedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeletedAt     string                 `protobuf:"bytes,2,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletedResponse) Reset() {
	*x = DeletedResponse{}
	mi := &file_proto_account_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletedResponse) ProtoMessage() {}

func (x *DeletedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletedResponse.ProtoReflect.Descriptor instead.
func (*DeletedResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{2}
}

func (x *DeletedResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeletedResponse) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

// Pagination messages
type PaginationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaginationRequest) Reset() {
	*x = PaginationRequest{}
	mi := &file_proto_account_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationRequest) ProtoMessage() {}

func (x *PaginationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationRequest.ProtoReflect.Descriptor instead.
func (*PaginationRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{3}
}

func (x *PaginationRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PaginationRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type PaginationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Total         int32                  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	mi := &file_proto_account_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{4}
}

func (x *PaginationResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PaginationResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Message representing an Franchise in the system
type FranchiseInput struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BusinessName     string                 `protobuf:"bytes,1,opt,name=business_name,json=businessName,proto3" json:"business_name,omitempty"`
	LogoUrl          string                 `protobuf:"bytes,2,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	Subdomain        string                 `protobuf:"bytes,3,opt,name=subdomain,proto3" json:"subdomain,omitempty"`
	ThemeSettings    *structpb.Struct       `protobuf:"bytes,4,opt,name=theme_settings,json=themeSettings,proto3" json:"theme_settings,omitempty"`
	Status           string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	FranchiseOwnerId string                 `protobuf:"bytes,6,opt,name=franchise_owner_id,json=franchiseOwnerId,proto3" json:"franchise_owner_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *FranchiseInput) Reset() {
	*x = FranchiseInput{}
	mi := &file_proto_account_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FranchiseInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FranchiseInput) ProtoMessage() {}

func (x *FranchiseInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FranchiseInput.ProtoReflect.Descriptor instead.
func (*FranchiseInput) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{5}
}

func (x *FranchiseInput) GetBusinessName() string {
	if x != nil {
		return x.BusinessName
	}
	return ""
}

func (x *FranchiseInput) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *FranchiseInput) GetSubdomain() string {
	if x != nil {
		return x.Subdomain
	}
	return ""
}

func (x *FranchiseInput) GetThemeSettings() *structpb.Struct {
	if x != nil {
		return x.ThemeSettings
	}
	return nil
}

func (x *FranchiseInput) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FranchiseInput) GetFranchiseOwnerId() string {
	if x != nil {
		return x.FranchiseOwnerId
	}
	return ""
}

// Message representing Franchise document in the system
type FranchiseDocumentInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocName       string                 `protobuf:"bytes,1,opt,name=doc_name,json=docName,proto3" json:"doc_name,omitempty"`
	DocDesc       string                 `protobuf:"bytes,2,opt,name=doc_desc,json=docDesc,proto3" json:"doc_desc,omitempty"`
	IsMandate     bool                   `protobuf:"varint,3,opt,name=is_mandate,json=isMandate,proto3" json:"is_mandate,omitempty"`
	DocumentUrl   string                 `protobuf:"bytes,4,opt,name=document_url,json=documentUrl,proto3" json:"document_url,omitempty"`
	UploadedBy    string                 `protobuf:"bytes,5,opt,name=uploaded_by,json=uploadedBy,proto3" json:"uploaded_by,omitempty"` // -- FK to outlet.owner or outlet.team_accounts
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Remarks       string                 `protobuf:"bytes,7,opt,name=remarks,proto3" json:"remarks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FranchiseDocumentInput) Reset() {
	*x = FranchiseDocumentInput{}
	mi := &file_proto_account_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FranchiseDocumentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FranchiseDocumentInput) ProtoMessage() {}

func (x *FranchiseDocumentInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FranchiseDocumentInput.ProtoReflect.Descriptor instead.
func (*FranchiseDocumentInput) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{6}
}

func (x *FranchiseDocumentInput) GetDocName() string {
	if x != nil {
		return x.DocName
	}
	return ""
}

func (x *FranchiseDocumentInput) GetDocDesc() string {
	if x != nil {
		return x.DocDesc
	}
	return ""
}

func (x *FranchiseDocumentInput) GetIsMandate() bool {
	if x != nil {
		return x.IsMandate
	}
	return false
}

func (x *FranchiseDocumentInput) GetDocumentUrl() string {
	if x != nil {
		return x.DocumentUrl
	}
	return ""
}

func (x *FranchiseDocumentInput) GetUploadedBy() string {
	if x != nil {
		return x.UploadedBy
	}
	return ""
}

func (x *FranchiseDocumentInput) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FranchiseDocumentInput) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

// Message representing an Franchise address in the system
type FranchiseAddressInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AddressLine   string                 `protobuf:"bytes,1,opt,name=address_line,json=addressLine,proto3" json:"address_line,omitempty"`
	City          string                 `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	State         string                 `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Country       string                 `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	Pincode       string                 `protobuf:"bytes,5,opt,name=pincode,proto3" json:"pincode,omitempty"`
	Latitude      string                 `protobuf:"bytes,6,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     string                 `protobuf:"bytes,7,opt,name=longitude,proto3" json:"longitude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FranchiseAddressInput) Reset() {
	*x = FranchiseAddressInput{}
	mi := &file_proto_account_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FranchiseAddressInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FranchiseAddressInput) ProtoMessage() {}

func (x *FranchiseAddressInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FranchiseAddressInput.ProtoReflect.Descriptor instead.
func (*FranchiseAddressInput) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{7}
}

func (x *FranchiseAddressInput) GetAddressLine() string {
	if x != nil {
		return x.AddressLine
	}
	return ""
}

func (x *FranchiseAddressInput) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *FranchiseAddressInput) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *FranchiseAddressInput) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *FranchiseAddressInput) GetPincode() string {
	if x != nil {
		return x.Pincode
	}
	return ""
}

func (x *FranchiseAddressInput) GetLatitude() string {
	if x != nil {
		return x.Latitude
	}
	return ""
}

func (x *FranchiseAddressInput) GetLongitude() string {
	if x != nil {
		return x.Longitude
	}
	return ""
}

// Message representing an Franchise owner in the system
type FranchiseOwnerInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Gender        string                 `protobuf:"bytes,2,opt,name=gender,proto3" json:"gender,omitempty"`
	Dob           string                 `protobuf:"bytes,3,opt,name=dob,proto3" json:"dob,omitempty"`
	MobileNo      string                 `protobuf:"bytes,4,opt,name=mobile_no,json=mobileNo,proto3" json:"mobile_no,omitempty"`
	Email         string                 `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Address       string                 `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	AadharNo      string                 `protobuf:"bytes,7,opt,name=aadhar_no,json=aadharNo,proto3" json:"aadhar_no,omitempty"`
	IsVerified    bool                   `protobuf:"varint,8,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	Status        string                 `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FranchiseOwnerInput) Reset() {
	*x = FranchiseOwnerInput{}
	mi := &file_proto_account_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FranchiseOwnerInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FranchiseOwnerInput) ProtoMessage() {}

func (x *FranchiseOwnerInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FranchiseOwnerInput.ProtoReflect.Descriptor instead.
func (*FranchiseOwnerInput) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{8}
}

func (x *FranchiseOwnerInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FranchiseOwnerInput) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *FranchiseOwnerInput) GetDob() string {
	if x != nil {
		return x.Dob
	}
	return ""
}

func (x *FranchiseOwnerInput) GetMobileNo() string {
	if x != nil {
		return x.MobileNo
	}
	return ""
}

func (x *FranchiseOwnerInput) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *FranchiseOwnerInput) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *FranchiseOwnerInput) GetAadharNo() string {
	if x != nil {
		return x.AadharNo
	}
	return ""
}

func (x *FranchiseOwnerInput) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

func (x *FranchiseOwnerInput) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type FranchiseByIDInput struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FranchiseDetails *FranchiseInput        `protobuf:"bytes,2,opt,name=franchise_details,json=franchiseDetails,proto3" json:"franchise_details,omitempty"`
	CreatedAt        string                 `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        string                 `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *FranchiseByIDInput) Reset() {
	*x = FranchiseByIDInput{}
	mi := &file_proto_account_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FranchiseByIDInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FranchiseByIDInput) ProtoMessage() {}

func (x *FranchiseByIDInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FranchiseByIDInput.ProtoReflect.Descriptor instead.
func (*FranchiseByIDInput) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{9}
}

func (x *FranchiseByIDInput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FranchiseByIDInput) GetFranchiseDetails() *FranchiseInput {
	if x != nil {
		return x.FranchiseDetails
	}
	return nil
}

func (x *FranchiseByIDInput) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *FranchiseByIDInput) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// Message representing an Account in the system
type AccountInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmpId         string                 `protobuf:"bytes,1,opt,name=emp_id,json=empId,proto3" json:"emp_id,omitempty"`
	LoginId       string                 `protobuf:"bytes,2,opt,name=login_id,json=loginId,proto3" json:"login_id,omitempty"`
	AccountType   string                 `protobuf:"bytes,3,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	MobileNo      string                 `protobuf:"bytes,5,opt,name=mobile_no,json=mobileNo,proto3" json:"mobile_no,omitempty"`
	EmailId       string                 `protobuf:"bytes,6,opt,name=email_id,json=emailId,proto3" json:"email_id,omitempty"`
	Status        string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountInput) Reset() {
	*x = AccountInput{}
	mi := &file_proto_account_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountInput) ProtoMessage() {}

func (x *AccountInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountInput.ProtoReflect.Descriptor instead.
func (*AccountInput) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{10}
}

func (x *AccountInput) GetEmpId() string {
	if x != nil {
		return x.EmpId
	}
	return ""
}

func (x *AccountInput) GetLoginId() string {
	if x != nil {
		return x.LoginId
	}
	return ""
}

func (x *AccountInput) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *AccountInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountInput) GetMobileNo() string {
	if x != nil {
		return x.MobileNo
	}
	return ""
}

func (x *AccountInput) GetEmailId() string {
	if x != nil {
		return x.EmailId
	}
	return ""
}

func (x *AccountInput) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type AddFranchiseRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	FranchiseDetails *FranchiseInput        `protobuf:"bytes,1,opt,name=franchise_details,json=franchiseDetails,proto3" json:"franchise_details,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AddFranchiseRequest) Reset() {
	*x = AddFranchiseRequest{}
	mi := &file_proto_account_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFranchiseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFranchiseRequest) ProtoMessage() {}

func (x *AddFranchiseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFranchiseRequest.ProtoReflect.Descriptor instead.
func (*AddFranchiseRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{11}
}

func (x *AddFranchiseRequest) GetFranchiseDetails() *FranchiseInput {
	if x != nil {
		return x.FranchiseDetails
	}
	return nil
}

type AadharNoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AadharNo      string                 `protobuf:"bytes,1,opt,name=aadhar_no,json=aadharNo,proto3" json:"aadhar_no,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AadharNoRequest) Reset() {
	*x = AadharNoRequest{}
	mi := &file_proto_account_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AadharNoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AadharNoRequest) ProtoMessage() {}

func (x *AadharNoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AadharNoRequest.ProtoReflect.Descriptor instead.
func (*AadharNoRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{12}
}

func (x *AadharNoRequest) GetAadharNo() string {
	if x != nil {
		return x.AadharNo
	}
	return ""
}

type BoolResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exist         bool                   `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BoolResponse) Reset() {
	*x = BoolResponse{}
	mi := &file_proto_account_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolResponse) ProtoMessage() {}

func (x *BoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolResponse.ProtoReflect.Descriptor instead.
func (*BoolResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{13}
}

func (x *BoolResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

type UpdateFranchiseRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FranchiseDetails *FranchiseInput        `protobuf:"bytes,2,opt,name=franchise_details,json=franchiseDetails,proto3" json:"franchise_details,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateFranchiseRequest) Reset() {
	*x = UpdateFranchiseRequest{}
	mi := &file_proto_account_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFranchiseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFranchiseRequest) ProtoMessage() {}

func (x *UpdateFranchiseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFranchiseRequest.ProtoReflect.Descriptor instead.
func (*UpdateFranchiseRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateFranchiseRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateFranchiseRequest) GetFranchiseDetails() *FranchiseInput {
	if x != nil {
		return x.FranchiseDetails
	}
	return nil
}

type UpdateFranchiseStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFranchiseStatusRequest) Reset() {
	*x = UpdateFranchiseStatusRequest{}
	mi := &file_proto_account_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFranchiseStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFranchiseStatusRequest) ProtoMessage() {}

func (x *UpdateFranchiseStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFranchiseStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateFranchiseStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateFranchiseStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateFranchiseStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// -> Response
type AddFranchiseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFranchiseResponse) Reset() {
	*x = AddFranchiseResponse{}
	mi := &file_proto_account_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFranchiseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFranchiseResponse) ProtoMessage() {}

func (x *AddFranchiseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFranchiseResponse.ProtoReflect.Descriptor instead.
func (*AddFranchiseResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{16}
}

func (x *AddFranchiseResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddFranchiseResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// DELETE
type DeleteFranchiseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AdminId       string                 `protobuf:"bytes,2,opt,name=admin_id,json=adminId,proto3" json:"admin_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFranchiseRequest) Reset() {
	*x = DeleteFranchiseRequest{}
	mi := &file_proto_account_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFranchiseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFranchiseRequest) ProtoMessage() {}

func (x *DeleteFranchiseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFranchiseRequest.ProtoReflect.Descriptor instead.
func (*DeleteFranchiseRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteFranchiseRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteFranchiseRequest) GetAdminId() string {
	if x != nil {
		return x.AdminId
	}
	return ""
}

type AddFranchiseDocumentRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	FranchiseId   string                  `protobuf:"bytes,1,opt,name=franchise_id,json=franchiseId,proto3" json:"franchise_id,omitempty"`
	FDoc          *FranchiseDocumentInput `protobuf:"bytes,2,opt,name=f_doc,json=fDoc,proto3" json:"f_doc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFranchiseDocumentRequest) Reset() {
	*x = AddFranchiseDocumentRequest{}
	mi := &file_proto_account_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFranchiseDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFranchiseDocumentRequest) ProtoMessage() {}

func (x *AddFranchiseDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFranchiseDocumentRequest.ProtoReflect.Descriptor instead.
func (*AddFranchiseDocumentRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{18}
}

func (x *AddFranchiseDocumentRequest) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

func (x *AddFranchiseDocumentRequest) GetFDoc() *FranchiseDocumentInput {
	if x != nil {
		return x.FDoc
	}
	return nil
}

type UpdateFranchiseDocumentRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Id            string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FranchiseId   string                  `protobuf:"bytes,2,opt,name=franchise_id,json=franchiseId,proto3" json:"franchise_id,omitempty"`
	FDoc          *FranchiseDocumentInput `protobuf:"bytes,3,opt,name=f_doc,json=fDoc,proto3" json:"f_doc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFranchiseDocumentRequest) Reset() {
	*x = UpdateFranchiseDocumentRequest{}
	mi := &file_proto_account_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFranchiseDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFranchiseDocumentRequest) ProtoMessage() {}

func (x *UpdateFranchiseDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFranchiseDocumentRequest.ProtoReflect.Descriptor instead.
func (*UpdateFranchiseDocumentRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateFranchiseDocumentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateFranchiseDocumentRequest) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

func (x *UpdateFranchiseDocumentRequest) GetFDoc() *FranchiseDocumentInput {
	if x != nil {
		return x.FDoc
	}
	return nil
}

// DELETE
type DeleteFranchiseDocumentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FranchiseId   string                 `protobuf:"bytes,2,opt,name=franchise_id,json=franchiseId,proto3" json:"franchise_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFranchiseDocumentRequest) Reset() {
	*x = DeleteFranchiseDocumentRequest{}
	mi := &file_proto_account_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFranchiseDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFranchiseDocumentRequest) ProtoMessage() {}

func (x *DeleteFranchiseDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFranchiseDocumentRequest.ProtoReflect.Descriptor instead.
func (*DeleteFranchiseDocumentRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteFranchiseDocumentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteFranchiseDocumentRequest) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

type AddFranchiseAddressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FranchiseId   string                 `protobuf:"bytes,1,opt,name=franchise_id,json=franchiseId,proto3" json:"franchise_id,omitempty"`
	Address       *FranchiseAddressInput `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFranchiseAddressRequest) Reset() {
	*x = AddFranchiseAddressRequest{}
	mi := &file_proto_account_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFranchiseAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFranchiseAddressRequest) ProtoMessage() {}

func (x *AddFranchiseAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFranchiseAddressRequest.ProtoReflect.Descriptor instead.
func (*AddFranchiseAddressRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{21}
}

func (x *AddFranchiseAddressRequest) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

func (x *AddFranchiseAddressRequest) GetAddress() *FranchiseAddressInput {
	if x != nil {
		return x.Address
	}
	return nil
}

type UpdateFranchiseAddressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FranchiseId   string                 `protobuf:"bytes,2,opt,name=franchise_id,json=franchiseId,proto3" json:"franchise_id,omitempty"`
	Address       *FranchiseAddressInput `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFranchiseAddressRequest) Reset() {
	*x = UpdateFranchiseAddressRequest{}
	mi := &file_proto_account_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFranchiseAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFranchiseAddressRequest) ProtoMessage() {}

func (x *UpdateFranchiseAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFranchiseAddressRequest.ProtoReflect.Descriptor instead.
func (*UpdateFranchiseAddressRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateFranchiseAddressRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateFranchiseAddressRequest) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

func (x *UpdateFranchiseAddressRequest) GetAddress() *FranchiseAddressInput {
	if x != nil {
		return x.Address
	}
	return nil
}

type AddFranchiseOwnerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owner         *FranchiseOwnerInput   `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFranchiseOwnerRequest) Reset() {
	*x = AddFranchiseOwnerRequest{}
	mi := &file_proto_account_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFranchiseOwnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFranchiseOwnerRequest) ProtoMessage() {}

func (x *AddFranchiseOwnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFranchiseOwnerRequest.ProtoReflect.Descriptor instead.
func (*AddFranchiseOwnerRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{23}
}

func (x *AddFranchiseOwnerRequest) GetOwner() *FranchiseOwnerInput {
	if x != nil {
		return x.Owner
	}
	return nil
}

type UpdateFranchiseOwnerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FranchiseId   string                 `protobuf:"bytes,2,opt,name=franchise_id,json=franchiseId,proto3" json:"franchise_id,omitempty"`
	Owner         *FranchiseOwnerInput   `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFranchiseOwnerRequest) Reset() {
	*x = UpdateFranchiseOwnerRequest{}
	mi := &file_proto_account_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFranchiseOwnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFranchiseOwnerRequest) ProtoMessage() {}

func (x *UpdateFranchiseOwnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFranchiseOwnerRequest.ProtoReflect.Descriptor instead.
func (*UpdateFranchiseOwnerRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateFranchiseOwnerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateFranchiseOwnerRequest) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

func (x *UpdateFranchiseOwnerRequest) GetOwner() *FranchiseOwnerInput {
	if x != nil {
		return x.Owner
	}
	return nil
}

// POST
type AddFranchiseAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FranchiseId   string                 `protobuf:"bytes,1,opt,name=franchise_id,json=franchiseId,proto3" json:"franchise_id,omitempty"`
	Account       *AccountInput          `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	RoleId        string                 `protobuf:"bytes,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFranchiseAccountRequest) Reset() {
	*x = AddFranchiseAccountRequest{}
	mi := &file_proto_account_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFranchiseAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFranchiseAccountRequest) ProtoMessage() {}

func (x *AddFranchiseAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFranchiseAccountRequest.ProtoReflect.Descriptor instead.
func (*AddFranchiseAccountRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{25}
}

func (x *AddFranchiseAccountRequest) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

func (x *AddFranchiseAccountRequest) GetAccount() *AccountInput {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *AddFranchiseAccountRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

// PUT
type UpdateFranchiseAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FranchiseId   string                 `protobuf:"bytes,2,opt,name=franchise_id,json=franchiseId,proto3" json:"franchise_id,omitempty"`
	Account       *AccountInput          `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	RoleId        string                 `protobuf:"bytes,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFranchiseAccountRequest) Reset() {
	*x = UpdateFranchiseAccountRequest{}
	mi := &file_proto_account_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFranchiseAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFranchiseAccountRequest) ProtoMessage() {}

func (x *UpdateFranchiseAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFranchiseAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateFranchiseAccountRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateFranchiseAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateFranchiseAccountRequest) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

func (x *UpdateFranchiseAccountRequest) GetAccount() *AccountInput {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *UpdateFranchiseAccountRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

// DELETE
type DeleteFranchiseAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FranchiseId   string                 `protobuf:"bytes,2,opt,name=franchise_id,json=franchiseId,proto3" json:"franchise_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFranchiseAccountRequest) Reset() {
	*x = DeleteFranchiseAccountRequest{}
	mi := &file_proto_account_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFranchiseAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFranchiseAccountRequest) ProtoMessage() {}

func (x *DeleteFranchiseAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFranchiseAccountRequest.ProtoReflect.Descriptor instead.
func (*DeleteFranchiseAccountRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteFranchiseAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteFranchiseAccountRequest) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

// GET
type GetByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetByIDRequest) Reset() {
	*x = GetByIDRequest{}
	mi := &file_proto_account_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIDRequest) ProtoMessage() {}

func (x *GetByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIDRequest.ProtoReflect.Descriptor instead.
func (*GetByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{28}
}

func (x *GetByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetFranchiseByName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFranchiseByName) Reset() {
	*x = GetFranchiseByName{}
	mi := &file_proto_account_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFranchiseByName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchiseByName) ProtoMessage() {}

func (x *GetFranchiseByName) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchiseByName.ProtoReflect.Descriptor instead.
func (*GetFranchiseByName) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{29}
}

func (x *GetFranchiseByName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// -> Response
type GetFranchiseByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Franchise     *FranchiseByIDInput    `protobuf:"bytes,1,opt,name=franchise,proto3" json:"franchise,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFranchiseByIDResponse) Reset() {
	*x = GetFranchiseByIDResponse{}
	mi := &file_proto_account_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFranchiseByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchiseByIDResponse) ProtoMessage() {}

func (x *GetFranchiseByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchiseByIDResponse.ProtoReflect.Descriptor instead.
func (*GetFranchiseByIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{30}
}

func (x *GetFranchiseByIDResponse) GetFranchise() *FranchiseByIDInput {
	if x != nil {
		return x.Franchise
	}
	return nil
}

type GetFranchiseCompleteDetailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFranchiseCompleteDetailsRequest) Reset() {
	*x = GetFranchiseCompleteDetailsRequest{}
	mi := &file_proto_account_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFranchiseCompleteDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchiseCompleteDetailsRequest) ProtoMessage() {}

func (x *GetFranchiseCompleteDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchiseCompleteDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetFranchiseCompleteDetailsRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{31}
}

func (x *GetFranchiseCompleteDetailsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// -> Response
type GetFranchiseCompleteDetailsResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Id            string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Franchise     *FranchiseByIDInput       `protobuf:"bytes,2,opt,name=franchise,proto3" json:"franchise,omitempty"`
	FOwner        *FranchiseOwnerInput      `protobuf:"bytes,3,opt,name=f_owner,json=fOwner,proto3" json:"f_owner,omitempty"`
	FAddress      []*FranchiseAddressInput  `protobuf:"bytes,4,rep,name=f_address,json=fAddress,proto3" json:"f_address,omitempty"`
	FDoc          []*FranchiseDocumentInput `protobuf:"bytes,5,rep,name=f_doc,json=fDoc,proto3" json:"f_doc,omitempty"`
	FAccounts     []*AccountInput           `protobuf:"bytes,6,rep,name=f_accounts,json=fAccounts,proto3" json:"f_accounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFranchiseCompleteDetailsResponse) Reset() {
	*x = GetFranchiseCompleteDetailsResponse{}
	mi := &file_proto_account_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFranchiseCompleteDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchiseCompleteDetailsResponse) ProtoMessage() {}

func (x *GetFranchiseCompleteDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchiseCompleteDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetFranchiseCompleteDetailsResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{32}
}

func (x *GetFranchiseCompleteDetailsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetFranchiseCompleteDetailsResponse) GetFranchise() *FranchiseByIDInput {
	if x != nil {
		return x.Franchise
	}
	return nil
}

func (x *GetFranchiseCompleteDetailsResponse) GetFOwner() *FranchiseOwnerInput {
	if x != nil {
		return x.FOwner
	}
	return nil
}

func (x *GetFranchiseCompleteDetailsResponse) GetFAddress() []*FranchiseAddressInput {
	if x != nil {
		return x.FAddress
	}
	return nil
}

func (x *GetFranchiseCompleteDetailsResponse) GetFDoc() []*FranchiseDocumentInput {
	if x != nil {
		return x.FDoc
	}
	return nil
}

func (x *GetFranchiseCompleteDetailsResponse) GetFAccounts() []*AccountInput {
	if x != nil {
		return x.FAccounts
	}
	return nil
}

// GET /franchises?skip0&take=100
type GetFranchisesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pagination    *PaginationRequest     `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFranchisesRequest) Reset() {
	*x = GetFranchisesRequest{}
	mi := &file_proto_account_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFranchisesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchisesRequest) ProtoMessage() {}

func (x *GetFranchisesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchisesRequest.ProtoReflect.Descriptor instead.
func (*GetFranchisesRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{33}
}

func (x *GetFranchisesRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetFranchisesRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

// -> Response
type GetFranchisesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Franchises    []*FranchiseByIDInput  `protobuf:"bytes,1,rep,name=franchises,proto3" json:"franchises,omitempty"`
	Pagination    *PaginationResponse    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFranchisesResponse) Reset() {
	*x = GetFranchisesResponse{}
	mi := &file_proto_account_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFranchisesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchisesResponse) ProtoMessage() {}

func (x *GetFranchisesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchisesResponse.ProtoReflect.Descriptor instead.
func (*GetFranchisesResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{34}
}

func (x *GetFranchisesResponse) GetFranchises() []*FranchiseByIDInput {
	if x != nil {
		return x.Franchises
	}
	return nil
}

func (x *GetFranchisesResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetFranchiseDocumentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FranchiseId   string                 `protobuf:"bytes,2,opt,name=franchise_id,json=franchiseId,proto3" json:"franchise_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFranchiseDocumentRequest) Reset() {
	*x = GetFranchiseDocumentRequest{}
	mi := &file_proto_account_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFranchiseDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchiseDocumentRequest) ProtoMessage() {}

func (x *GetFranchiseDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchiseDocumentRequest.ProtoReflect.Descriptor instead.
func (*GetFranchiseDocumentRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{35}
}

func (x *GetFranchiseDocumentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetFranchiseDocumentRequest) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

type GetFranchiseDocumentResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Id            string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FranchiseId   string                  `protobuf:"bytes,2,opt,name=franchise_id,json=franchiseId,proto3" json:"franchise_id,omitempty"`
	FDoc          *FranchiseDocumentInput `protobuf:"bytes,3,opt,name=f_doc,json=fDoc,proto3" json:"f_doc,omitempty"`
	CreatedAt     string                  `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                  `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFranchiseDocumentResponse) Reset() {
	*x = GetFranchiseDocumentResponse{}
	mi := &file_proto_account_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFranchiseDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchiseDocumentResponse) ProtoMessage() {}

func (x *GetFranchiseDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchiseDocumentResponse.ProtoReflect.Descriptor instead.
func (*GetFranchiseDocumentResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{36}
}

func (x *GetFranchiseDocumentResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetFranchiseDocumentResponse) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

func (x *GetFranchiseDocumentResponse) GetFDoc() *FranchiseDocumentInput {
	if x != nil {
		return x.FDoc
	}
	return nil
}

func (x *GetFranchiseDocumentResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetFranchiseDocumentResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetFranchiseOwnerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerId       string                 `protobuf:"bytes,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFranchiseOwnerRequest) Reset() {
	*x = GetFranchiseOwnerRequest{}
	mi := &file_proto_account_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFranchiseOwnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchiseOwnerRequest) ProtoMessage() {}

func (x *GetFranchiseOwnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchiseOwnerRequest.ProtoReflect.Descriptor instead.
func (*GetFranchiseOwnerRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{37}
}

func (x *GetFranchiseOwnerRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

type GetFranchiseOwnerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FOwner        *FranchiseOwnerInput   `protobuf:"bytes,2,opt,name=f_owner,json=fOwner,proto3" json:"f_owner,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFranchiseOwnerResponse) Reset() {
	*x = GetFranchiseOwnerResponse{}
	mi := &file_proto_account_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFranchiseOwnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchiseOwnerResponse) ProtoMessage() {}

func (x *GetFranchiseOwnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchiseOwnerResponse.ProtoReflect.Descriptor instead.
func (*GetFranchiseOwnerResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{38}
}

func (x *GetFranchiseOwnerResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetFranchiseOwnerResponse) GetFOwner() *FranchiseOwnerInput {
	if x != nil {
		return x.FOwner
	}
	return nil
}

func (x *GetFranchiseOwnerResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetFranchiseOwnerResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetFranchiseAddressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FranchiseId   string                 `protobuf:"bytes,2,opt,name=franchise_id,json=franchiseId,proto3" json:"franchise_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFranchiseAddressRequest) Reset() {
	*x = GetFranchiseAddressRequest{}
	mi := &file_proto_account_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFranchiseAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchiseAddressRequest) ProtoMessage() {}

func (x *GetFranchiseAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchiseAddressRequest.ProtoReflect.Descriptor instead.
func (*GetFranchiseAddressRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{39}
}

func (x *GetFranchiseAddressRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetFranchiseAddressRequest) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

type GetFranchiseAddressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FranchiseId   string                 `protobuf:"bytes,2,opt,name=franchise_id,json=franchiseId,proto3" json:"franchise_id,omitempty"`
	FAddress      *FranchiseAddressInput `protobuf:"bytes,3,opt,name=f_address,json=fAddress,proto3" json:"f_address,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFranchiseAddressResponse) Reset() {
	*x = GetFranchiseAddressResponse{}
	mi := &file_proto_account_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFranchiseAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchiseAddressResponse) ProtoMessage() {}

func (x *GetFranchiseAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchiseAddressResponse.ProtoReflect.Descriptor instead.
func (*GetFranchiseAddressResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{40}
}

func (x *GetFranchiseAddressResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetFranchiseAddressResponse) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

func (x *GetFranchiseAddressResponse) GetFAddress() *FranchiseAddressInput {
	if x != nil {
		return x.FAddress
	}
	return nil
}

func (x *GetFranchiseAddressResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetFranchiseAddressResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// GET
type GetFranchiseAccountByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     string                 `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	FranchiseId   string                 `protobuf:"bytes,2,opt,name=franchise_id,json=franchiseId,proto3" json:"franchise_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFranchiseAccountByIDRequest) Reset() {
	*x = GetFranchiseAccountByIDRequest{}
	mi := &file_proto_account_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFranchiseAccountByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchiseAccountByIDRequest) ProtoMessage() {}

func (x *GetFranchiseAccountByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchiseAccountByIDRequest.ProtoReflect.Descriptor instead.
func (*GetFranchiseAccountByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{41}
}

func (x *GetFranchiseAccountByIDRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GetFranchiseAccountByIDRequest) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

// -> Response
type GetFranchiseAccountByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FranchiseId   string                 `protobuf:"bytes,2,opt,name=franchise_id,json=franchiseId,proto3" json:"franchise_id,omitempty"`
	Accounts      *AccountInput          `protobuf:"bytes,3,opt,name=accounts,proto3" json:"accounts,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFranchiseAccountByIDResponse) Reset() {
	*x = GetFranchiseAccountByIDResponse{}
	mi := &file_proto_account_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFranchiseAccountByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchiseAccountByIDResponse) ProtoMessage() {}

func (x *GetFranchiseAccountByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchiseAccountByIDResponse.ProtoReflect.Descriptor instead.
func (*GetFranchiseAccountByIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{42}
}

func (x *GetFranchiseAccountByIDResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetFranchiseAccountByIDResponse) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

func (x *GetFranchiseAccountByIDResponse) GetAccounts() *AccountInput {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *GetFranchiseAccountByIDResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetFranchiseAccountByIDResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// GET
type GetFranchiseAccountsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FranchiseId   string                 `protobuf:"bytes,1,opt,name=franchise_id,json=franchiseId,proto3" json:"franchise_id,omitempty"`
	Pagination    *PaginationRequest     `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Query         string                 `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFranchiseAccountsRequest) Reset() {
	*x = GetFranchiseAccountsRequest{}
	mi := &file_proto_account_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFranchiseAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchiseAccountsRequest) ProtoMessage() {}

func (x *GetFranchiseAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchiseAccountsRequest.ProtoReflect.Descriptor instead.
func (*GetFranchiseAccountsRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{43}
}

func (x *GetFranchiseAccountsRequest) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

func (x *GetFranchiseAccountsRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetFranchiseAccountsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

// -> Response
type GetFranchiseAccountsResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Accounts      []*GetFranchiseAccountByIDResponse `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	Pagination    *PaginationResponse                `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFranchiseAccountsResponse) Reset() {
	*x = GetFranchiseAccountsResponse{}
	mi := &file_proto_account_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFranchiseAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFranchiseAccountsResponse) ProtoMessage() {}

func (x *GetFranchiseAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFranchiseAccountsResponse.ProtoReflect.Descriptor instead.
func (*GetFranchiseAccountsResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{44}
}

func (x *GetFranchiseAccountsResponse) GetAccounts() []*GetFranchiseAccountByIDResponse {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *GetFranchiseAccountsResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type AddFranchiseRoleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FranchiseId   string                 `protobuf:"bytes,1,opt,name=franchise_id,json=franchiseId,proto3" json:"franchise_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IsDefault     bool                   `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFranchiseRoleRequest) Reset() {
	*x = AddFranchiseRoleRequest{}
	mi := &file_proto_account_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFranchiseRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFranchiseRoleRequest) ProtoMessage() {}

func (x *AddFranchiseRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFranchiseRoleRequest.ProtoReflect.Descriptor instead.
func (*AddFranchiseRoleRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{45}
}

func (x *AddFranchiseRoleRequest) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

func (x *AddFranchiseRoleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddFranchiseRoleRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddFranchiseRoleRequest) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type UpdateFranchiseRoleRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Id            string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FRole         *AddFranchiseRoleRequest `protobuf:"bytes,2,opt,name=f_role,json=fRole,proto3" json:"f_role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFranchiseRoleRequest) Reset() {
	*x = UpdateFranchiseRoleRequest{}
	mi := &file_proto_account_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFranchiseRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFranchiseRoleRequest) ProtoMessage() {}

func (x *UpdateFranchiseRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFranchiseRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateFranchiseRoleRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{46}
}

func (x *UpdateFranchiseRoleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateFranchiseRoleRequest) GetFRole() *AddFranchiseRoleRequest {
	if x != nil {
		return x.FRole
	}
	return nil
}

type FranchiseRoleResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Id            string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FRole         *AddFranchiseRoleRequest `protobuf:"bytes,2,opt,name=f_role,json=fRole,proto3" json:"f_role,omitempty"`
	CreatedAt     string                   `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                   `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FranchiseRoleResponse) Reset() {
	*x = FranchiseRoleResponse{}
	mi := &file_proto_account_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FranchiseRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FranchiseRoleResponse) ProtoMessage() {}

func (x *FranchiseRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FranchiseRoleResponse.ProtoReflect.Descriptor instead.
func (*FranchiseRoleResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{47}
}

func (x *FranchiseRoleResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FranchiseRoleResponse) GetFRole() *AddFranchiseRoleRequest {
	if x != nil {
		return x.FRole
	}
	return nil
}

func (x *FranchiseRoleResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *FranchiseRoleResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type AddRolePermission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoleId        string                 `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	PermissionId  string                 `protobuf:"bytes,2,opt,name=permission_id,json=permissionId,proto3" json:"permission_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRolePermission) Reset() {
	*x = AddRolePermission{}
	mi := &file_proto_account_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRolePermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRolePermission) ProtoMessage() {}

func (x *AddRolePermission) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRolePermission.ProtoReflect.Descriptor instead.
func (*AddRolePermission) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{48}
}

func (x *AddRolePermission) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *AddRolePermission) GetPermissionId() string {
	if x != nil {
		return x.PermissionId
	}
	return ""
}

type RolePermissionDetails struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	FranchiseId    string                 `protobuf:"bytes,1,opt,name=franchise_id,json=franchiseId,proto3" json:"franchise_id,omitempty"`
	RoleName       string                 `protobuf:"bytes,2,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	RoleDesc       string                 `protobuf:"bytes,3,opt,name=role_desc,json=roleDesc,proto3" json:"role_desc,omitempty"`
	IsDefault      string                 `protobuf:"bytes,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	PermissionKey  string                 `protobuf:"bytes,5,opt,name=permission_key,json=permissionKey,proto3" json:"permission_key,omitempty"`
	PermissionDesc string                 `protobuf:"bytes,6,opt,name=permission_desc,json=permissionDesc,proto3" json:"permission_desc,omitempty"`
	CreatedAt      string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      string                 `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RolePermissionDetails) Reset() {
	*x = RolePermissionDetails{}
	mi := &file_proto_account_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolePermissionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolePermissionDetails) ProtoMessage() {}

func (x *RolePermissionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolePermissionDetails.ProtoReflect.Descriptor instead.
func (*RolePermissionDetails) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{49}
}

func (x *RolePermissionDetails) GetFranchiseId() string {
	if x != nil {
		return x.FranchiseId
	}
	return ""
}

func (x *RolePermissionDetails) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RolePermissionDetails) GetRoleDesc() string {
	if x != nil {
		return x.RoleDesc
	}
	return ""
}

func (x *RolePermissionDetails) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *RolePermissionDetails) GetPermissionKey() string {
	if x != nil {
		return x.PermissionKey
	}
	return ""
}

func (x *RolePermissionDetails) GetPermissionDesc() string {
	if x != nil {
		return x.PermissionDesc
	}
	return ""
}

func (x *RolePermissionDetails) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *RolePermissionDetails) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetAllRolePermissionDetails struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	RoleP         []*RolePermissionDetails `protobuf:"bytes,1,rep,name=roleP,proto3" json:"roleP,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllRolePermissionDetails) Reset() {
	*x = GetAllRolePermissionDetails{}
	mi := &file_proto_account_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllRolePermissionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRolePermissionDetails) ProtoMessage() {}

func (x *GetAllRolePermissionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRolePermissionDetails.ProtoReflect.Descriptor instead.
func (*GetAllRolePermissionDetails) Descriptor() ([]byte, []int) {
	return file_proto_account_proto_rawDescGZIP(), []int{50}
}

func (x *GetAllRolePermissionDetails) GetRoleP() []*RolePermissionDetails {
	if x != nil {
		return x.RoleP
	}
	return nil
}

var file_proto_account_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50001,
		Name:          "account.resource",
		Tag:           "bytes,50001,opt,name=resource",
		Filename:      "proto/account.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50002,
		Name:          "account.action",
		Tag:           "bytes,50002,opt,name=action",
		Filename:      "proto/account.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional string resource = 50001;
	E_Resource = &file_proto_account_proto_extTypes[0]
	// optional string action = 50002;
	E_Action = &file_proto_account_proto_extTypes[1]
)

var File_proto_account_proto protoreflect.FileDescriptor

var file_proto_account_proto_rawDesc = string([]byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3c,
	0x0a, 0x0b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3f, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x40, 0x0a,
	0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x3d, 0x0a, 0x11, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x54,
	0x0a, 0x12, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0xf4, 0x01, 0x0a, 0x0e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x3e, 0x0a, 0x0e, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0d, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a,
	0x12, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe3, 0x01, 0x0a, 0x16,
	0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x63, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x63, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x73, 0x22, 0xd2, 0x01, 0x0a, 0x15, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0xf6, 0x01, 0x0a, 0x13, 0x46, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f,
	0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x62, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x61, 0x64,
	0x68, 0x61, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x61,
	0x64, 0x68, 0x61, 0x72, 0x4e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0xa8, 0x01, 0x0a, 0x12, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x42, 0x79, 0x49,
	0x44, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x44, 0x0a, 0x11, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x69, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x10, 0x66, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x69, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc7, 0x01, 0x0a, 0x0c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x65,
	0x6d, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x70,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x6e,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e,
	0x6f, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x5b, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x46, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x11, 0x66,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52,
	0x10, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x2e, 0x0a, 0x0f, 0x41, 0x61, 0x64, 0x68, 0x61, 0x72, 0x4e, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x61, 0x64, 0x68, 0x61, 0x72, 0x5f, 0x6e,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x61, 0x64, 0x68, 0x61, 0x72, 0x4e,
	0x6f, 0x22, 0x24, 0x0a, 0x0c, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x22, 0x6e, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x44, 0x0a, 0x11, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x10, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x46, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x45, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x43, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x76, 0x0a, 0x1b, 0x41,
	0x64, 0x64, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x05, 0x66, 0x5f, 0x64, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x04, 0x66,
	0x44, 0x6f, 0x63, 0x22, 0x89, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x66, 0x5f, 0x64,
	0x6f, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x04, 0x66, 0x44, 0x6f, 0x63, 0x22,
	0x53, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x46, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x8c, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x69, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4e,
	0x0a, 0x18, 0x41, 0x64, 0x64, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x84,
	0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x32, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x89, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x46, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0x9c, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x22, 0x52, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x69, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x55, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x09,
	0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x69, 0x73, 0x65, 0x42, 0x79, 0x49, 0x44, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x09, 0x66, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd0, 0x02,
	0x0a, 0x23, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x07, 0x66, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x69, 0x73, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52,
	0x06, 0x66, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x09, 0x66, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x08, 0x66, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x66, 0x5f, 0x64, 0x6f, 0x63, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x46, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x52, 0x04, 0x66, 0x44, 0x6f, 0x63, 0x12, 0x34, 0x0a, 0x0a, 0x66, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x09, 0x66, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x22, 0x68, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x0a, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x50,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x64,
	0x22, 0xc5, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73,
	0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x66, 0x5f, 0x64, 0x6f, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x46, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x52, 0x04, 0x66, 0x44, 0x6f, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x35, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22,
	0xa0, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a,
	0x07, 0x66, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x06, 0x66, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x4f, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73,
	0x65, 0x49, 0x64, 0x22, 0xcb, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x09, 0x66, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x08, 0x66, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x62, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x69, 0x73, 0x65, 0x49, 0x64, 0x22, 0xc5, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x08,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x92, 0x01,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x22, 0xa1, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x69, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x91, 0x01, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x46, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x65, 0x0a, 0x1a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x66, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x66, 0x52, 0x6f, 0x6c,
	0x65, 0x22, 0x9e, 0x01, 0x0a, 0x15, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x66,
	0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x66,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x51, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xa1, 0x02, 0x0a, 0x15, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b,
	0x65, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x53, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x50, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x50, 0x32, 0xf6,
	0x1a, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x12, 0x1c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x8a, 0xb5, 0x18, 0x09, 0x66, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x92, 0xb5, 0x18, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x64, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17,
	0x8a, 0xb5, 0x18, 0x09, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x92, 0xb5, 0x18,
	0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x76, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x25, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1d, 0x8a, 0xb5, 0x18, 0x0f, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x92, 0xb5, 0x18, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x65, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x8a,
	0xb5, 0x18, 0x09, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x92, 0xb5, 0x18, 0x06,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x6b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x8a, 0xb5, 0x18, 0x09, 0x66,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x92, 0xb5, 0x18, 0x07, 0x76, 0x69, 0x65, 0x77,
	0x41, 0x6c, 0x6c, 0x12, 0x65, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x69, 0x73, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x15, 0x8a, 0xb5, 0x18, 0x09, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x92, 0xb5, 0x18, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x73, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x42, 0x79, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x21, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x8a, 0xb5, 0x18, 0x09, 0x66, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x92, 0xb5, 0x18, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12,
	0x76, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73,
	0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x8a, 0xb5, 0x18, 0x11, 0x66, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x69, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x92, 0xb5, 0x18,
	0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x24, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73,
	0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1d, 0x8a, 0xb5, 0x18, 0x11, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x92, 0xb5, 0x18, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x12, 0x80, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x12, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1f, 0x8a, 0xb5, 0x18, 0x11, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73,
	0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x92, 0xb5, 0x18, 0x06, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x8a, 0xb5, 0x18, 0x11, 0x66, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x69, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x92, 0xb5, 0x18,
	0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x73, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x23, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x46,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x8a, 0xb5,
	0x18, 0x10, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x92, 0xb5, 0x18, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x82, 0x01, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x49, 0x44, 0x12, 0x23, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1c, 0x8a, 0xb5, 0x18, 0x10, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x92, 0xb5, 0x18, 0x04, 0x76, 0x69, 0x65,
	0x77, 0x12, 0x7d, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x26, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1e, 0x8a, 0xb5, 0x18, 0x10, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x92, 0xb5, 0x18, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x6d, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x69, 0x73, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1c, 0x8a, 0xb5, 0x18, 0x0e, 0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x92, 0xb5, 0x18, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x77, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x12, 0x24, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x69, 0x73, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x8a, 0xb5, 0x18, 0x0e,
	0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x92, 0xb5,
	0x18, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x7a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x42, 0x79, 0x49,
	0x44, 0x12, 0x21, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x8a, 0xb5, 0x18, 0x0e, 0x66, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x92, 0xb5, 0x18, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x6b, 0x0a, 0x1c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x42, 0x79, 0x41, 0x61, 0x64, 0x68,
	0x61, 0x72, 0x49, 0x44, 0x12, 0x18, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41,
	0x61, 0x64, 0x68, 0x61, 0x72, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x8a, 0xb5, 0x18, 0x0e, 0x66, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x92, 0xb5, 0x18, 0x04, 0x76, 0x69, 0x65,
	0x77, 0x12, 0x73, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x8a, 0xb5, 0x18, 0x10, 0x66, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x92, 0xb5, 0x18, 0x06,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x8a, 0xb5, 0x18, 0x10, 0x66, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x92, 0xb5, 0x18, 0x04, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x84, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x69, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x69, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x8a, 0xb5, 0x18, 0x10, 0x66,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x92,
	0xb5, 0x18, 0x07, 0x76, 0x69, 0x65, 0x77, 0x41, 0x6c, 0x6c, 0x12, 0x7d, 0x0a, 0x1a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x26, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69,
	0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x8a, 0xb5, 0x18, 0x10, 0x66,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x92,
	0xb5, 0x18, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x7e, 0x0a, 0x1a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x26, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x8a, 0xb5, 0x18, 0x10, 0x66,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x92,
	0xb5, 0x18, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x6a, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x20, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x8a, 0xb5, 0x18, 0x0d, 0x66, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x92, 0xb5, 0x18, 0x06, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x70, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x23, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x8a, 0xb5, 0x18, 0x0d,
	0x66, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x92, 0xb5, 0x18,
	0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x6a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12,
	0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x8a, 0xb5, 0x18, 0x0d, 0x66, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x69, 0x73, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x92, 0xb5, 0x18, 0x04, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x6c, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x6f, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x1a, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x1c, 0x8a, 0xb5, 0x18, 0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x92, 0xb5, 0x18, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x6f, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x6f, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x1a, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x1c, 0x8a, 0xb5, 0x18, 0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x92, 0xb5, 0x18, 0x06, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x73, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x17, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x1a, 0x8a, 0xb5, 0x18,
	0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x92,
	0xb5, 0x18, 0x04, 0x76, 0x69, 0x65, 0x77, 0x3a, 0x3c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0xd1, 0x86, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a, 0x38, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xd2, 0x86, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_account_proto_rawDescOnce sync.Once
	file_proto_account_proto_rawDescData []byte
)

func file_proto_account_proto_rawDescGZIP() []byte {
	file_proto_account_proto_rawDescOnce.Do(func() {
		file_proto_account_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_account_proto_rawDesc), len(file_proto_account_proto_rawDesc)))
	})
	return file_proto_account_proto_rawDescData
}

var file_proto_account_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
var file_proto_account_proto_goTypes = []any{
	(*AddResponse)(nil),                         // 0: account.AddResponse
	(*UpdateResponse)(nil),                      // 1: account.UpdateResponse
	(*DeletedResponse)(nil),                     // 2: account.DeletedResponse
	(*PaginationRequest)(nil),                   // 3: account.PaginationRequest
	(*PaginationResponse)(nil),                  // 4: account.PaginationResponse
	(*FranchiseInput)(nil),                      // 5: account.FranchiseInput
	(*FranchiseDocumentInput)(nil),              // 6: account.FranchiseDocumentInput
	(*FranchiseAddressInput)(nil),               // 7: account.FranchiseAddressInput
	(*FranchiseOwnerInput)(nil),                 // 8: account.FranchiseOwnerInput
	(*FranchiseByIDInput)(nil),                  // 9: account.FranchiseByIDInput
	(*AccountInput)(nil),                        // 10: account.AccountInput
	(*AddFranchiseRequest)(nil),                 // 11: account.AddFranchiseRequest
	(*AadharNoRequest)(nil),                     // 12: account.AadharNoRequest
	(*BoolResponse)(nil),                        // 13: account.BoolResponse
	(*UpdateFranchiseRequest)(nil),              // 14: account.UpdateFranchiseRequest
	(*UpdateFranchiseStatusRequest)(nil),        // 15: account.UpdateFranchiseStatusRequest
	(*AddFranchiseResponse)(nil),                // 16: account.AddFranchiseResponse
	(*DeleteFranchiseRequest)(nil),              // 17: account.DeleteFranchiseRequest
	(*AddFranchiseDocumentRequest)(nil),         // 18: account.AddFranchiseDocumentRequest
	(*UpdateFranchiseDocumentRequest)(nil),      // 19: account.UpdateFranchiseDocumentRequest
	(*DeleteFranchiseDocumentRequest)(nil),      // 20: account.DeleteFranchiseDocumentRequest
	(*AddFranchiseAddressRequest)(nil),          // 21: account.AddFranchiseAddressRequest
	(*UpdateFranchiseAddressRequest)(nil),       // 22: account.UpdateFranchiseAddressRequest
	(*AddFranchiseOwnerRequest)(nil),            // 23: account.AddFranchiseOwnerRequest
	(*UpdateFranchiseOwnerRequest)(nil),         // 24: account.UpdateFranchiseOwnerRequest
	(*AddFranchiseAccountRequest)(nil),          // 25: account.AddFranchiseAccountRequest
	(*UpdateFranchiseAccountRequest)(nil),       // 26: account.UpdateFranchiseAccountRequest
	(*DeleteFranchiseAccountRequest)(nil),       // 27: account.DeleteFranchiseAccountRequest
	(*GetByIDRequest)(nil),                      // 28: account.GetByIDRequest
	(*GetFranchiseByName)(nil),                  // 29: account.GetFranchiseByName
	(*GetFranchiseByIDResponse)(nil),            // 30: account.GetFranchiseByIDResponse
	(*GetFranchiseCompleteDetailsRequest)(nil),  // 31: account.GetFranchiseCompleteDetailsRequest
	(*GetFranchiseCompleteDetailsResponse)(nil), // 32: account.GetFranchiseCompleteDetailsResponse
	(*GetFranchisesRequest)(nil),                // 33: account.GetFranchisesRequest
	(*GetFranchisesResponse)(nil),               // 34: account.GetFranchisesResponse
	(*GetFranchiseDocumentRequest)(nil),         // 35: account.GetFranchiseDocumentRequest
	(*GetFranchiseDocumentResponse)(nil),        // 36: account.GetFranchiseDocumentResponse
	(*GetFranchiseOwnerRequest)(nil),            // 37: account.GetFranchiseOwnerRequest
	(*GetFranchiseOwnerResponse)(nil),           // 38: account.GetFranchiseOwnerResponse
	(*GetFranchiseAddressRequest)(nil),          // 39: account.GetFranchiseAddressRequest
	(*GetFranchiseAddressResponse)(nil),         // 40: account.GetFranchiseAddressResponse
	(*GetFranchiseAccountByIDRequest)(nil),      // 41: account.GetFranchiseAccountByIDRequest
	(*GetFranchiseAccountByIDResponse)(nil),     // 42: account.GetFranchiseAccountByIDResponse
	(*GetFranchiseAccountsRequest)(nil),         // 43: account.GetFranchiseAccountsRequest
	(*GetFranchiseAccountsResponse)(nil),        // 44: account.GetFranchiseAccountsResponse
	(*AddFranchiseRoleRequest)(nil),             // 45: account.AddFranchiseRoleRequest
	(*UpdateFranchiseRoleRequest)(nil),          // 46: account.UpdateFranchiseRoleRequest
	(*FranchiseRoleResponse)(nil),               // 47: account.FranchiseRoleResponse
	(*AddRolePermission)(nil),                   // 48: account.AddRolePermission
	(*RolePermissionDetails)(nil),               // 49: account.RolePermissionDetails
	(*GetAllRolePermissionDetails)(nil),         // 50: account.GetAllRolePermissionDetails
	(*structpb.Struct)(nil),                     // 51: google.protobuf.Struct
	(*descriptorpb.MethodOptions)(nil),          // 52: google.protobuf.MethodOptions
}
var file_proto_account_proto_depIdxs = []int32{
	51, // 0: account.FranchiseInput.theme_settings:type_name -> google.protobuf.Struct
	5,  // 1: account.FranchiseByIDInput.franchise_details:type_name -> account.FranchiseInput
	5,  // 2: account.AddFranchiseRequest.franchise_details:type_name -> account.FranchiseInput
	5,  // 3: account.UpdateFranchiseRequest.franchise_details:type_name -> account.FranchiseInput
	6,  // 4: account.AddFranchiseDocumentRequest.f_doc:type_name -> account.FranchiseDocumentInput
	6,  // 5: account.UpdateFranchiseDocumentRequest.f_doc:type_name -> account.FranchiseDocumentInput
	7,  // 6: account.AddFranchiseAddressRequest.address:type_name -> account.FranchiseAddressInput
	7,  // 7: account.UpdateFranchiseAddressRequest.address:type_name -> account.FranchiseAddressInput
	8,  // 8: account.AddFranchiseOwnerRequest.owner:type_name -> account.FranchiseOwnerInput
	8,  // 9: account.UpdateFranchiseOwnerRequest.owner:type_name -> account.FranchiseOwnerInput
	10, // 10: account.AddFranchiseAccountRequest.account:type_name -> account.AccountInput
	10, // 11: account.UpdateFranchiseAccountRequest.account:type_name -> account.AccountInput
	9,  // 12: account.GetFranchiseByIDResponse.franchise:type_name -> account.FranchiseByIDInput
	9,  // 13: account.GetFranchiseCompleteDetailsResponse.franchise:type_name -> account.FranchiseByIDInput
	8,  // 14: account.GetFranchiseCompleteDetailsResponse.f_owner:type_name -> account.FranchiseOwnerInput
	7,  // 15: account.GetFranchiseCompleteDetailsResponse.f_address:type_name -> account.FranchiseAddressInput
	6,  // 16: account.GetFranchiseCompleteDetailsResponse.f_doc:type_name -> account.FranchiseDocumentInput
	10, // 17: account.GetFranchiseCompleteDetailsResponse.f_accounts:type_name -> account.AccountInput
	3,  // 18: account.GetFranchisesRequest.pagination:type_name -> account.PaginationRequest
	9,  // 19: account.GetFranchisesResponse.franchises:type_name -> account.FranchiseByIDInput
	4,  // 20: account.GetFranchisesResponse.pagination:type_name -> account.PaginationResponse
	6,  // 21: account.GetFranchiseDocumentResponse.f_doc:type_name -> account.FranchiseDocumentInput
	8,  // 22: account.GetFranchiseOwnerResponse.f_owner:type_name -> account.FranchiseOwnerInput
	7,  // 23: account.GetFranchiseAddressResponse.f_address:type_name -> account.FranchiseAddressInput
	10, // 24: account.GetFranchiseAccountByIDResponse.accounts:type_name -> account.AccountInput
	3,  // 25: account.GetFranchiseAccountsRequest.pagination:type_name -> account.PaginationRequest
	42, // 26: account.GetFranchiseAccountsResponse.accounts:type_name -> account.GetFranchiseAccountByIDResponse
	4,  // 27: account.GetFranchiseAccountsResponse.pagination:type_name -> account.PaginationResponse
	45, // 28: account.UpdateFranchiseRoleRequest.f_role:type_name -> account.AddFranchiseRoleRequest
	45, // 29: account.FranchiseRoleResponse.f_role:type_name -> account.AddFranchiseRoleRequest
	49, // 30: account.GetAllRolePermissionDetails.roleP:type_name -> account.RolePermissionDetails
	52, // 31: account.resource:extendee -> google.protobuf.MethodOptions
	52, // 32: account.action:extendee -> google.protobuf.MethodOptions
	11, // 33: account.AccountService.CreateFranchise:input_type -> account.AddFranchiseRequest
	14, // 34: account.AccountService.UpdateFranchise:input_type -> account.UpdateFranchiseRequest
	15, // 35: account.AccountService.UpdateFranchiseStatus:input_type -> account.UpdateFranchiseStatusRequest
	17, // 36: account.AccountService.DeleteFranchise:input_type -> account.DeleteFranchiseRequest
	33, // 37: account.AccountService.GetAllFranchises:input_type -> account.GetFranchisesRequest
	28, // 38: account.AccountService.GetFranchiseByID:input_type -> account.GetByIDRequest
	29, // 39: account.AccountService.GetFranchiseByBusinessName:input_type -> account.GetFranchiseByName
	18, // 40: account.AccountService.CreateFranchiseDocument:input_type -> account.AddFranchiseDocumentRequest
	35, // 41: account.AccountService.GetFranchiseDocumentByID:input_type -> account.GetFranchiseDocumentRequest
	19, // 42: account.AccountService.UpdateFranchiseDocumentByID:input_type -> account.UpdateFranchiseDocumentRequest
	20, // 43: account.AccountService.DeleteFranchiseDocumentByID:input_type -> account.DeleteFranchiseDocumentRequest
	21, // 44: account.AccountService.CreateFranchiseAddress:input_type -> account.AddFranchiseAddressRequest
	39, // 45: account.AccountService.GetFranchiseAddressByID:input_type -> account.GetFranchiseAddressRequest
	22, // 46: account.AccountService.UpdateFranchiseAddressByID:input_type -> account.UpdateFranchiseAddressRequest
	23, // 47: account.AccountService.CreateFranchiseOwner:input_type -> account.AddFranchiseOwnerRequest
	24, // 48: account.AccountService.UpdateFranchiseOwnerByID:input_type -> account.UpdateFranchiseOwnerRequest
	37, // 49: account.AccountService.GetFranchiseOwnerByID:input_type -> account.GetFranchiseOwnerRequest
	12, // 50: account.AccountService.CheckIfOwnerExistsByAadharID:input_type -> account.AadharNoRequest
	25, // 51: account.AccountService.CreateFranchiseAccount:input_type -> account.AddFranchiseAccountRequest
	41, // 52: account.AccountService.GetFranchiseAccountByID:input_type -> account.GetFranchiseAccountByIDRequest
	43, // 53: account.AccountService.GetFranchiseAccounts:input_type -> account.GetFranchiseAccountsRequest
	26, // 54: account.AccountService.UpdateFranchiseAccountByID:input_type -> account.UpdateFranchiseAccountRequest
	27, // 55: account.AccountService.DeleteFranchiseAccountByID:input_type -> account.DeleteFranchiseAccountRequest
	45, // 56: account.AccountService.CreateFranchiseRole:input_type -> account.AddFranchiseRoleRequest
	46, // 57: account.AccountService.UpdateFranchiseRole:input_type -> account.UpdateFranchiseRoleRequest
	28, // 58: account.AccountService.GetAllFranchiseRoles:input_type -> account.GetByIDRequest
	48, // 59: account.AccountService.AddPermissionsToRole:input_type -> account.AddRolePermission
	48, // 60: account.AccountService.UpdatePermissionsToRole:input_type -> account.AddRolePermission
	28, // 61: account.AccountService.GetAllPermissionToRole:input_type -> account.GetByIDRequest
	0,  // 62: account.AccountService.CreateFranchise:output_type -> account.AddResponse
	1,  // 63: account.AccountService.UpdateFranchise:output_type -> account.UpdateResponse
	1,  // 64: account.AccountService.UpdateFranchiseStatus:output_type -> account.UpdateResponse
	2,  // 65: account.AccountService.DeleteFranchise:output_type -> account.DeletedResponse
	34, // 66: account.AccountService.GetAllFranchises:output_type -> account.GetFranchisesResponse
	30, // 67: account.AccountService.GetFranchiseByID:output_type -> account.GetFranchiseByIDResponse
	30, // 68: account.AccountService.GetFranchiseByBusinessName:output_type -> account.GetFranchiseByIDResponse
	0,  // 69: account.AccountService.CreateFranchiseDocument:output_type -> account.AddResponse
	36, // 70: account.AccountService.GetFranchiseDocumentByID:output_type -> account.GetFranchiseDocumentResponse
	1,  // 71: account.AccountService.UpdateFranchiseDocumentByID:output_type -> account.UpdateResponse
	2,  // 72: account.AccountService.DeleteFranchiseDocumentByID:output_type -> account.DeletedResponse
	0,  // 73: account.AccountService.CreateFranchiseAddress:output_type -> account.AddResponse
	40, // 74: account.AccountService.GetFranchiseAddressByID:output_type -> account.GetFranchiseAddressResponse
	1,  // 75: account.AccountService.UpdateFranchiseAddressByID:output_type -> account.UpdateResponse
	0,  // 76: account.AccountService.CreateFranchiseOwner:output_type -> account.AddResponse
	1,  // 77: account.AccountService.UpdateFranchiseOwnerByID:output_type -> account.UpdateResponse
	38, // 78: account.AccountService.GetFranchiseOwnerByID:output_type -> account.GetFranchiseOwnerResponse
	13, // 79: account.AccountService.CheckIfOwnerExistsByAadharID:output_type -> account.BoolResponse
	0,  // 80: account.AccountService.CreateFranchiseAccount:output_type -> account.AddResponse
	42, // 81: account.AccountService.GetFranchiseAccountByID:output_type -> account.GetFranchiseAccountByIDResponse
	44, // 82: account.AccountService.GetFranchiseAccounts:output_type -> account.GetFranchiseAccountsResponse
	1,  // 83: account.AccountService.UpdateFranchiseAccountByID:output_type -> account.UpdateResponse
	2,  // 84: account.AccountService.DeleteFranchiseAccountByID:output_type -> account.DeletedResponse
	0,  // 85: account.AccountService.CreateFranchiseRole:output_type -> account.AddResponse
	1,  // 86: account.AccountService.UpdateFranchiseRole:output_type -> account.UpdateResponse
	47, // 87: account.AccountService.GetAllFranchiseRoles:output_type -> account.FranchiseRoleResponse
	48, // 88: account.AccountService.AddPermissionsToRole:output_type -> account.AddRolePermission
	48, // 89: account.AccountService.UpdatePermissionsToRole:output_type -> account.AddRolePermission
	50, // 90: account.AccountService.GetAllPermissionToRole:output_type -> account.GetAllRolePermissionDetails
	62, // [62:91] is the sub-list for method output_type
	33, // [33:62] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	31, // [31:33] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_proto_account_proto_init() }
func file_proto_account_proto_init() {
	if File_proto_account_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_account_proto_rawDesc), len(file_proto_account_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   51,
			NumExtensions: 2,
			NumServices:   1,
		},
		GoTypes:           file_proto_account_proto_goTypes,
		DependencyIndexes: file_proto_account_proto_depIdxs,
		MessageInfos:      file_proto_account_proto_msgTypes,
		ExtensionInfos:    file_proto_account_proto_extTypes,
	}.Build()
	File_proto_account_proto = out.File
	file_proto_account_proto_goTypes = nil
	file_proto_account_proto_depIdxs = nil
}
